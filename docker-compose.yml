services:
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD:-changeme}
    volumes:
      - redis-data:/data
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 3

  telegram-pubsub:
    build:
      context: .
      dockerfile: Dockerfile.telegram-pubsub
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-changeme}
      - BOT_CONFIG_PATH=/app/bot_config.json
    volumes:
      - ./bot_config.json:/app/bot_config.json:ro
    depends_on:
      - redis
    networks:
      - app-network
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 2
      start_period: 30s

  bot-logic:
    build:
      context: .
      dockerfile: Dockerfile.bot-logic
    deploy:
      replicas: 3
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-changeme}
      - API_CHAT_URL=${API_CHAT_URL:-http://host.docker.internal:8000/message}
      - API_TIMEOUT=190.0
      - API_RETRIES=2
      - API_RETRY_DELAY=1.0
      - INSTANCE_NAME=bot-logic-${REPLICA_ID:-0}
    volumes:
      - ./bot_config.json:/app/bot_config.json:ro
    depends_on:
      - redis
    networks:
      - app-network
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 20s
      timeout: 10s
      retries: 2
      start_period: 30s

networks:
  app-network:
    driver: bridge

volumes:
  redis-data:
